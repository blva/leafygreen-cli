{"pageProps":{"component":"combobox","changelog":"<h1>@leafygreen-ui/combobox</h1>\n<h2>1.2.2</h2>\n<h3>Patch Changes</h3>\n<ul>\n<li>fad2b287: Fixes a bug where occasionally the max menu height would be set to 0 if a ref was left unset</li>\n</ul>\n<h2>1.2.1</h2>\n<h3>Patch Changes</h3>\n<ul>\n<li>Updated dependencies [f0a357e2]\n<ul>\n<li>@leafygreen-ui/tooltip@7.0.3</li>\n</ul>\n</li>\n</ul>\n<h2>1.2.0</h2>\n<h3>Minor Changes</h3>\n<ul>\n<li>8ab46ed4: Adds <code>Large</code> size variant to Combobox. Additionally, restores legacy font in Label &#x26; Description</li>\n<li>d241af9e: Adds a <code>disabled</code> prop to ComboboxOptions. Note, disabled options will still be rendered in the menu, but not selectable</li>\n</ul>\n<h3>Patch Changes</h3>\n<ul>\n<li>d5c12b77: Updates filtering behavior. Now when opening the menu all options will be displayed, regardless of whether a selection has already been made</li>\n<li>a5d19177: Updates backdrop click behavior to match native <code>&#x3C;select></code>. Now, when clicking away from an open menu to close it, the Combobox will retain focus and no click handlers should fire on clicked elements until the menu is closed</li>\n<li>8f7f8555: Updates combobox focus ring behavior. The combobox will now display a focus ring whenever the user is able to type in thy combobox. The outer focus ring will not render if a chip or the clear button is focused.</li>\n<li>4f2ff237: - Updates min-width of the input to fit all characters (previously wide characters would be cut off).\n<ul>\n<li>Updates text wrapping of menu items so long unbroken strings (like ids) won't overflow, but wrap.</li>\n</ul>\n</li>\n<li>d241af9e: Restores menu font to legacy Akzidenz font</li>\n<li>6792bc44: Refactors Combobox and Select to use the new <code>useAvailableSpace</code> hook to calculate the max menu height</li>\n<li>266e0d8e: Ensures the focus remains in the combobox when a chip is removed. Focus is set to either the input, or the next chip to the right, whichever is relevant</li>\n<li>422dbfcd: Adds additional tests for internal Combobox utilities</li>\n<li>Updated dependencies [1356d50d]</li>\n<li>Updated dependencies [6a89bc29]</li>\n<li>Updated dependencies [fd2f6de0]</li>\n<li>Updated dependencies [6792bc44]</li>\n<li>Updated dependencies [96d1ff9c]</li>\n<li>Updated dependencies [422dbfcd]</li>\n<li>Updated dependencies [9ff90d4b]\n<ul>\n<li>@leafygreen-ui/checkbox@8.0.3</li>\n<li>@leafygreen-ui/palette@3.4.0</li>\n<li>@leafygreen-ui/hooks@7.3.0</li>\n<li>@leafygreen-ui/icon-button@11.0.2</li>\n<li>@leafygreen-ui/inline-definition@3.0.2</li>\n<li>@leafygreen-ui/tokens@1.3.1</li>\n<li>@leafygreen-ui/typography@11.0.2</li>\n<li>@leafygreen-ui/lib@9.3.0</li>\n</ul>\n</li>\n</ul>\n<h2>1.1.0</h2>\n<h3>Minor Changes</h3>\n<ul>\n<li>e9c39305: - Reduces <code>min-width</code> of combobox down to <code>24px</code></li>\n</ul>\n<h3>Patch Changes</h3>\n<ul>\n<li>a526ac52: Adds <code>@leafygreen-ui/tokens</code> and <code>@leafygreen-ui/tooltip</code> to dependencies</li>\n<li>e9c39305: Updates highlighting function to fix a bug where some text would be duplicated\n<ul>\n<li>Fixes left padding when <code>overflow=\"scroll-x\"</code></li>\n<li>Clarifies wording for <code>initialValue</code> prop docs</li>\n</ul>\n</li>\n<li>Updated dependencies [e630a889]</li>\n<li>Updated dependencies [2670e4db]</li>\n<li>Updated dependencies [6c12e85a]\n<ul>\n<li>@leafygreen-ui/checkbox@8.0.2</li>\n<li>@leafygreen-ui/icon@11.10.0</li>\n</ul>\n</li>\n</ul>\n<h2>1.0.3</h2>\n<h3>Patch Changes</h3>\n<ul>\n<li>Updated dependencies [e13d2487]</li>\n<li>Updated dependencies [500d6c60]\n<ul>\n<li>@leafygreen-ui/checkbox@8.0.0</li>\n<li>@leafygreen-ui/icon-button@11.0.0</li>\n<li>@leafygreen-ui/popover@8.0.0</li>\n<li>@leafygreen-ui/interaction-ring@3.0.0</li>\n<li>@leafygreen-ui/icon@11.9.0</li>\n<li>@leafygreen-ui/typography@11.0.0</li>\n</ul>\n</li>\n</ul>\n<h2>1.0.2</h2>\n<h3>Patch Changes</h3>\n<ul>\n<li>Updated dependencies [acd6919]</li>\n<li>Updated dependencies [acd6919]</li>\n<li>Updated dependencies [acd6919]</li>\n<li>Updated dependencies [acd6919]</li>\n<li>Updated dependencies [acd6919]\n<ul>\n<li>@leafygreen-ui/lib@9.2.0</li>\n<li>@leafygreen-ui/icon@11.8.0</li>\n<li>@leafygreen-ui/checkbox@7.0.0</li>\n<li>@leafygreen-ui/palette@3.3.2</li>\n</ul>\n</li>\n</ul>\n<h2>1.0.1</h2>\n<h3>Patch Changes</h3>\n<ul>\n<li>e8f1a97: - Updates focus behavior, allowing users to re-open the menu with the mouse after making a selection\n<ul>\n<li>Adds a warning if <code>multiselect</code> and <code>value</code> props don't align</li>\n<li>Fixes a bug where long display names would get truncated early</li>\n<li>Fixes a bug where the space bar wouldn't type a space character</li>\n<li>Fixes a bug where some characters could not be typed when a <code>value</code> prop was passed in</li>\n<li>Updates hooks dependency to <code>^7.2.0</code></li>\n</ul>\n</li>\n<li>Updated dependencies [e8f1a97]\n<ul>\n<li>@leafygreen-ui/icon@11.7.0</li>\n<li>@leafygreen-ui/icon-button@10.0.0</li>\n</ul>\n</li>\n</ul>\n<h2>1.0.0</h2>\n<h3>Major Changes</h3>\n<ul>\n<li>548ca2c: - Release Combobox as v1\n<ul>\n<li>Adds standard popover props: <code>usePortal</code>, <code>popoverZIndex</code>, <code>popoverClassName</code>, <code>portalContainer</code>, and <code>scrollContainer</code>.</li>\n<li>Fixes issue where clicking on elements within a Combobox option wouldn't select that option.</li>\n</ul>\n</li>\n</ul>\n","readme":"# Combobox\n\n![npm (scoped)](https://img.shields.io/npm/v/@leafygreen-ui/combobox.svg)\n\n#### [View on MongoDB.design](https://www.mongodb.design/component/combobox/example/)\n\n## Installation\n\n### Yarn\n\n```shell\nyarn add @leafygreen-ui/combobox\n```\n\n### NPM\n\n```shell\nnpm install @leafygreen-ui/combobox\n```\n\n## Example\n\n```js\nimport { Combobox, ComboboxOption } from '@leafygreen-ui/combobox';\n\n<Combobox\n  label=\"Choose a fruit\"\n  description=\"Please pick one\"\n  placeholder=\"Select fruit\"\n>\n  <ComboboxOption value=\"apple\" />\n  <ComboboxOption value=\"banana\" />\n  <ComboboxOption value=\"carrot\" />\n  <ComboboxOption value=\"dragonfruit\" />\n  <ComboboxGroup label=\"Peppers\">\n    <ComboboxOption value=\"cayenne\" />\n    <ComboboxOption value=\"habanero\" />\n    <ComboboxOption value=\"jalapeno\" displayName=\"JalapeÃ±o\" />\n  </ComboboxGroup>\n</Combobox>;\n```\n\n**Output HTML**\n\n```html\n<div>\n  <div>\n    <label id=\"combobox-label-1\" for=\"combobox-input-1\"> Choose a fruit </label>\n    <p>Please pick one</p>\n  </div>\n  <div>\n    <div\n      role=\"combobox\"\n      aria-expanded=\"true\"\n      aria-controls=\"combobox-menu-1\"\n      aria-owns=\"combobox-menu-1\"\n      tabindex=\"-1\"\n      data-disabled=\"false\"\n      data-state=\"none\"\n    >\n      <div>\n        <input\n          aria-label=\"Choose a fruit\"\n          aria-autocomplete=\"list\"\n          aria-controls=\"combobox-menu-1\"\n          aria-labelledby=\"combobox-label-1\"\n          id=\"combobox-input-1\"\n          placeholder=\"Select fruit\"\n          value=\"\"\n        />\n      </div>\n      <svg aria-label=\"Caret Down Icon\">...</svg>\n    </div>\n  </div>\n</div>\n```\n\n## Properties\n\n| Prop                     | Type                                          | Description                                                                                                                                                                                                                                                                                                                                                                                                                                                         | Default                  |\n| ------------------------ | --------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------ |\n| `children`               | `<ComboboxOption>`, `<ComboboxGroup>`         | Define the Combobox Options by passing children                                                                                                                                                                                                                                                                                                                                                                                                                     |                          |\n| `multiselect`            | `boolean`                                     | Defines whether a user can select multiple options, or only a single option. When using TypeScript, `multiselect` affects the valid values of `initialValue`, `value`, and `onChange`                                                                                                                                                                                                                                                                               | `false`                  |\n| `initialValue`           | `Array<string>`, `string`                     | The initial selection. Must be a string (or array of strings) that matches the `value` prop of a `ComboboxOption`. Changing the `initialValue` after initial render will not change the selection.                                                                                                                                                                                                                                                                  |                          |\n| `value`                  | `Array<string>`, `string`                     | The controlled value of the Combobox. Must be a string (or array of strings) that matches the `value` prop of a `ComboboxOption`. Changing `value` after initial render _will_ affect the selection. `value` will always take precedence over `initialValue` if both are provided.                                                                                                                                                                                  |                          |\n| `onChange`               | `(Array<string>) => void`, `(string) => void` | A callback called when the selection changes. Callback recieves a single argument that is the new selection, either string, or string array                                                                                                                                                                                                                                                                                                                         |                          |\n| `overflow`               | `'expand-y'`, `'expand-x'`, `'scroll-x'`      | Defines the overflow behavior of a multiselect combobox. **expand-y**: Combobox has fixed width, and additional selections will cause the element to grow in the block direction. **expand-x**: Combobox has fixed height, and additional selections will cause the elemenet to grow in the inline direction. **scroll-x**: Combobox has fixed height and width, and additional selections will cause the element to be scrollable in the x (horizontal) direction. | `'expand-y'`             |\n| `label`                  | `string`                                      | An accessible label for the input, rendered in a `<label>` to the DOM                                                                                                                                                                                                                                                                                                                                                                                               |                          |\n| `aria-label`             | `string`                                      | An accessible label for the input, used only for screen-readers                                                                                                                                                                                                                                                                                                                                                                                                     |                          |\n| `description`            | `string`                                      | A description for the input                                                                                                                                                                                                                                                                                                                                                                                                                                         |                          |\n| `placeholder`            | `string`                                      | A placeholder for the input element. Uses the native `placeholder` attribute.                                                                                                                                                                                                                                                                                                                                                                                       | 'Select'                 |\n| `disabled`               | `boolean`                                     | Disables all interaction with the component                                                                                                                                                                                                                                                                                                                                                                                                                         | false                    |\n| `size`                   | `'default'`                                   | Defines the visual size of the component                                                                                                                                                                                                                                                                                                                                                                                                                            | 'default'                |\n| `darkMode`               | `boolean`                                     | Toggles dark mode                                                                                                                                                                                                                                                                                                                                                                                                                                                   | false                    |\n| `state`                  | `'error'`, `'none'`                           | The error state of the component. Defines whether the error message is displayed.                                                                                                                                                                                                                                                                                                                                                                                   | 'none'                   |\n| `errorMessage`           | `string`                                      | The message shown below the input when `state` is `error`                                                                                                                                                                                                                                                                                                                                                                                                           |                          |\n| `onFilter`               | `(value: string) => void`                     | A callback called when the search input changes. Recieves a single argument that is the current input value. Use this callback to set `searchState` and/or `filteredOptions` appropriately                                                                                                                                                                                                                                                                          |                          |\n| `searchState`            | `'unset'`, `'error'`, `'loading'`             | The state of search results. Toggles search messages within the menu.                                                                                                                                                                                                                                                                                                                                                                                               | 'unset'                  |\n| `searchErrorMessage`     | `string`                                      | A message shown within the menu when `searchState` is `error`                                                                                                                                                                                                                                                                                                                                                                                                       | 'Could not get results!' |\n| `searchLoadingMessage`   | `string`                                      | A message shown within the menu when `searchState` is `loading`                                                                                                                                                                                                                                                                                                                                                                                                     | 'Loading results...'     |\n| `searchEmptyMessage`     | `string`                                      | A message shown within the menu when there are no options passed in as children, or `filteredOptions` is an empty array                                                                                                                                                                                                                                                                                                                                             | 'No results found'       |\n| `clearable`              | `boolean`                                     | Defines whether the Clear button appears to the right of the input                                                                                                                                                                                                                                                                                                                                                                                                  |                          |\n| `onClear`                | `(e: MouseEvent) => void`                     | A callback fired when the Clear button is pressed. Fired _after_ `onChange`, and _before_ `onFilter`                                                                                                                                                                                                                                                                                                                                                                |                          |\n| `filteredOptions`        | `Array<string>`, `null`                       | An array used to define which options are displayed. Do not remove Options from the JSX children, as this will affect the selected options                                                                                                                                                                                                                                                                                                                          |                          |\n| `chipTruncationLocation` | `'start'`, `'middle'`, `'end'`, `'none'`      | Defines where the ellipses appear in a Chip when the length exceeds the `chipCharacterLimit`                                                                                                                                                                                                                                                                                                                                                                        | 'none'                   |\n| `chipCharacterLimit`     | `number`                                      | Defined the character limit of a multiselect Chip before they start truncating. Note: the three ellipses dots are included in the character limit.                                                                                                                                                                                                                                                                                                                  | 12                       |\n| `className`              | `string`                                      | The className passed to the root element of the component.                                                                                                                                                                                                                                                                                                                                                                                                          |                          |\n| `usePortal`              | `boolean`                                     | Will position Popover's children relative to its parent without using a Portal, if `usePortal` is set to false. NOTE: The parent element should be CSS position `relative`, `fixed`, or `absolute` if using this option.                                                                                                                                                                                                                                            | `true`                   |\n| `portalContainer`        | `HTMLElement` \\| `null`                       | Sets the container used for the popover's portal.                                                                                                                                                                                                                                                                                                                                                                                                                   |                          |\n| `scrollContainer`        | `HTMLElement` \\| `null`                       | If the popover portal has a scrollable ancestor other than the window, this prop allows passing a reference to that element to allow the portal to position properly.                                                                                                                                                                                                                                                                                               |                          |\n| `portalClassName`        | `string`                                      | Passes the given className to the popover's portal container if the default portal container is being used.                                                                                                                                                                                                                                                                                                                                                         |                          |\n| `popoverZIndex`          | `number`                                      | Sets the z-index CSS property for the popover.                                                                                                                                                                                                                                                                                                                                                                                                                      |                          |\n\n# ComboboxOption\n\n## Props\n\n| Prop          | Type      | Description                                                                                                                                                                   | Default |\n| ------------- | --------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------- |\n| `value`       | `string`  | The internal value of the option. Used as the identifier in Combobox `initialValue`, `value` and `filteredOptions`. When undefined, this is set to `_.kebabCase(displayName)` |         |\n| `displayName` | `string`  | The display value of the option. Used as the rendered string within the menu and chips. When undefined, this is set to `value`                                                |         |\n| `glyph`       | `<Icon/>` | The icon to display to the left of the option in the menu.                                                                                                                    |         |\n| `className`   | `string`  | The className passed to the root element of the component.                                                                                                                    |         |\n\n# ComboboxGroup\n\n## Props\n\n| Prop        | Type               | Description                                                | Default |\n| ----------- | ------------------ | ---------------------------------------------------------- | ------- |\n| `label`     | `string`           | Label for the group of options                             |         |\n| `children`  | `<ComboboxOption>` | Options in the group                                       |         |\n| `className` | `string`           | The className passed to the root element of the component. |         |\n"},"__N_SSG":true}