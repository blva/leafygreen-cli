{"pageProps":{"component":"segmented-control","changelog":"<h1>@leafygreen-ui/segmented-control</h1>\n<h2>2.0.1</h2>\n<h3>Patch Changes</h3>\n<ul>\n<li>96d1ff9c: Updates to propTypes, TSDocs, and Storybook controls</li>\n<li>Updated dependencies [6792bc44]</li>\n<li>Updated dependencies [96d1ff9c]</li>\n<li>Updated dependencies [422dbfcd]\n<ul>\n<li>@leafygreen-ui/hooks@7.3.0</li>\n<li>@leafygreen-ui/tokens@1.3.1</li>\n<li>@leafygreen-ui/typography@11.0.2</li>\n<li>@leafygreen-ui/lib@9.3.0</li>\n</ul>\n</li>\n</ul>\n<h2>2.0.0</h2>\n<h3>Major Changes</h3>\n<ul>\n<li>e13d2487: Moving leafygreen-provider to peerDependencies.</li>\n<li>Updated dependencies [c48e943e]\n<ul>\n<li>@leafygreen-ui/leafygreen-provider@2.2.0</li>\n</ul>\n</li>\n</ul>\n<h3>Patch Changes</h3>\n<ul>\n<li>Updated dependencies [e13d2487]</li>\n<li>Updated dependencies [5f28fce1]</li>\n<li>Updated dependencies [c48e943e]\n<ul>\n<li>@leafygreen-ui/interaction-ring@3.0.0</li>\n<li>@leafygreen-ui/tokens@1.3.0</li>\n<li>@leafygreen-ui/typography@11.0.0</li>\n</ul>\n</li>\n</ul>\n<h2>1.0.2</h2>\n<h3>Patch Changes</h3>\n<ul>\n<li>Updated dependencies [233ac580]</li>\n<li>Updated dependencies [ba4aab15]</li>\n<li>Updated dependencies [ba4aab15]</li>\n<li>Updated dependencies [2cf1bc4a]</li>\n<li>Updated dependencies [679b6239]</li>\n<li>Updated dependencies [f3aad7e2]\n<ul>\n<li>@leafygreen-ui/tokens@1.2.0</li>\n<li>@leafygreen-ui/lib@9.2.1</li>\n</ul>\n</li>\n</ul>\n<h2>1.0.1</h2>\n<h3>Patch Changes</h3>\n<ul>\n<li>acd6919: Prevent segmented control from hijacking focus</li>\n<li>Updated dependencies [acd6919]</li>\n<li>Updated dependencies [acd6919]\n<ul>\n<li>@leafygreen-ui/lib@9.2.0</li>\n</ul>\n</li>\n</ul>\n<h2>1.0.0</h2>\n<h3>Major Changes</h3>\n<ul>\n<li>614be76: - Updates Segmented Control in line with Visual Brand refresh</li>\n</ul>\n<h3>Patch Changes</h3>\n<ul>\n<li>Fixes a flickering animation on initial component render</li>\n<li>Updated dependencies [614be76]\n<ul>\n<li>@leafygreen-ui/typography@9.1.1</li>\n<li>@leafygreen-ui/tokens@1.1.0</li>\n</ul>\n</li>\n</ul>\n<h2>0.9.1</h2>\n<h3>Patch Changes</h3>\n<ul>\n<li>d661688: Bumps version of lib &#x26; typography package deps</li>\n<li>Updated dependencies [d661688]</li>\n<li>Updated dependencies [d661688]\n<ul>\n<li>@leafygreen-ui/lib@9.1.0</li>\n<li>@leafygreen-ui/hooks@7.1.0</li>\n</ul>\n</li>\n</ul>\n","readme":"# Segmented Control\n\n![npm (scoped)](https://img.shields.io/npm/v/@leafygreen-ui/segmented-control.svg)\n\n#### [View on MongoDB.design](https://www.mongodb.design/component/segmented-control/example/)\n\n## Installation\n\n### Yarn\n\n```shell\nyarn add @leafygreen-ui/segmented-control\n```\n\n### NPM\n\n```shell\nnpm install @leafygreen-ui/segmented-control\n```\n\n## Example\n\n```js\nimport {\n  SegmentedControl,\n  SegmentedControlOption,\n} from '@leafygreen-ui/segmented-control';\n\n<SegmentedControl\n  name=\"fruit\"\n  size={'default'}\n  darkMode={false}\n  followFocus={true}\n  defaultValue={carrot}\n  onChange={(value: string) => {\n    console.log(value);\n  }}\n>\n  <SegmentedControlOption value=\"apple\">Apple</SegmentedControlOption>\n\n  <SegmentedControlOption value=\"banana\">Banana</SegmentedControlOption>\n\n  <SegmentedControlOption value=\"carrot\">Carrot</SegmentedControlOption>\n\n  <SegmentedControlOption value=\"dragonfruit\" disabled>\n    Dragonfruit\n  </SegmentedControlOption>\n</SegmentedControl>;\n```\n\n**Output HTML**\n\n```html\n<div>\n  <div\n    role=\"tablist\"\n    aria-label=\"fruit\"\n    aria-owns=\"fruit-0 fruit-1 fruit-2 fruit-3\"\n  >\n    <div data-lg-checked=\"true\">\n      <div>\n        <div tabindex=\"-1\">\n          <button role=\"tab\" id=\"fruit-0\" tabindex=\"0\" aria-selected=\"true\">\n            <span>Apple</span>\n          </button>\n        </div>\n        <div data-leafygreen-ui=\"interaction-ring\"></div>\n      </div>\n    </div>\n    <div data-lg-checked=\"false\">\n      <div>\n        <div tabindex=\"-1\">\n          <button role=\"tab\" id=\"fruit-1\" tabindex=\"-1\" aria-selected=\"false\">\n            <span>Banana</span>\n          </button>\n        </div>\n        <div data-leafygreen-ui=\"interaction-ring\"></div>\n      </div>\n    </div>\n    <div data-lg-checked=\"false\">\n      <div>\n        <div tabindex=\"-1\">\n          <button role=\"tab\" id=\"fruit-2\" tabindex=\"-1\" aria-selected=\"false\">\n            <span>Carrot</span>\n          </button>\n        </div>\n        <div data-leafygreen-ui=\"interaction-ring\"></div>\n      </div>\n    </div>\n    <div data-lg-checked=\"false\">\n      <div>\n        <div tabindex=\"-1\">\n          <button\n            role=\"tab\"\n            id=\"fruit-3\"\n            tabindex=\"-1\"\n            aria-selected=\"false\"\n            disabled=\"\"\n          >\n            <span>Dragonfruit</span>\n          </button>\n        </div>\n        <div data-leafygreen-ui=\"interaction-ring\"></div>\n      </div>\n    </div>\n    <div data-leafygreen-ui=\"selection-indicator\"></div>\n    <div data-leafygreen-ui=\"hover-indicator\"></div>\n  </div>\n</div>\n```\n\n## Props\n\n| Prop              | Type                      | Description                                                                                                                                                                                              | Default   |\n| ----------------- | ------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------- |\n| `children`        | `React.ReactNode`         | Children must be `SegmentedControlOptions`                                                                                                                                                               | `null`    |\n| `size`            | `small / default / large` | Defines the size of the segmented control.                                                                                                                                                               | `default` |\n| `darkMode`        | `boolean`                 | Toggles dark mode                                                                                                                                                                                        | `false`   |\n| `defaultValue`    | `string`                  | Defines the default, or initial value of the component. Ignored if `value` is also provided.                                                                                                             | `''`      |\n| `value`           | `string`                  | Controls the value of the component. If provided, you must update the value in the `onChange` method, or other user actions (such as routing)                                                            |           |\n| `label`           | `string`                  | A text label to the left of the segmented control. Sets the `name` prop if none is provided.                                                                                                             |           |\n| `name`            | `string`                  | Identifies the segmented control group to screen readers. Auto-generated if no `name` or `label` is provided. It's recommended for accessability to set this to a meaningful value for accessibility.    |           |\n| `followFocus`     | `boolean`                 | Defines whether the selection should automatically follow focus. If set to true, the arrow keys can be used to switch selection, otherwise a keyboard user will need to press enter to make a selection. | `true`    |\n| `'aria-controls'` | `string`                  | An `id` ref that identifies the element(s) whose contents/presence is controlled by the segmented control. Required as a prop on the control, or on each individual option.                              |           |\n| `className`       | `string`                  | Adds a className to the outermost element.                                                                                                                                                               |           |\n| `onChange`        | `(value: string) => void` | Callback that gets called when a user makes a new selection.                                                                                                                                             |           |\n\n# SegmentedControlOption\n\n## Props\n\n| Prop              | Type                         | Description                                                                                                                                                                 | Default            |\n| ----------------- | ---------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------ |\n| `children`        | `React.ReactNode`            | Can be text and/or an icon element                                                                                                                                          |                    |\n| `value`           | `string`                     | Required. The value of the option.                                                                                                                                          |                    |\n| `disabled`        | `boolean`                    | Toggles whether the option is disabled.                                                                                                                                     | `false`            |\n| `as`              | `string`                     | Render the option wrapped in another component. Typically used for router `Link` components.                                                                                | `'div'`            |\n| `'aria-controls'` | `string`                     | An `id` ref that identifies the element(s) whose contents/presence is controlled by the segmented control. Required as a prop on the control, or on each individual option. |                    |\n| `className`       | `string`                     | Adds a className to the outermost element.                                                                                                                                  |                    |\n| `_id`             | `string`                     | Internal. A unique identifier for the option                                                                                                                                | `${name}-${index}` |\n| `_checked`        | `boolean`                    | Internal. Identifies whether the option is checked.                                                                                                                         |                    |\n| `_focused`        | `boolean`                    | Internal. Identifies whether the option has focus                                                                                                                           |                    |\n| `_index`          | `number`                     | Internal. The index of the option                                                                                                                                           |                    |\n| `_onClick`        | `(value: string) => void`    | Internal. Calls the onChange callback                                                                                                                                       |                    |\n| `_onHover`        | `(hovered: boolean) => void` | Internal. Fires on mouse in and out                                                                                                                                         |                    |\n"},"__N_SSG":true}